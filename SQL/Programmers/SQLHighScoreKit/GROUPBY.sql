-- 131116
-- 식품분류별로 가격이 제일 비싼 식품
-- 분류, 가격, 이름을 조회
-- '과자', '국', '김치', '식용유'인 경우만
-- 식품 가격을 기준으로 내림차순 정렬
SELECT NEW.CATEGORY, NEW.MAX_PRICE, OLD.PRODUCT_NAME
FROM FOOD_PRODUCT as OLD
    JOIN (
        SELECT CATEGORY, MAX(PRICE) AS MAX_PRICE
        FROM FOOD_PRODUCT
        WHERE CATEGORY IN ('과자', '국', '김치', '식용유')
        GROUP BY CATEGORY
    ) as NEW ON OLD.CATEGORY = NEW.CATEGORY AND OLD.PRICE = NEW.MAX_PRICE
ORDER BY MAX_PRICE DESC

-- 144856
-- 2022년 1월
-- 저자 별, 카테고리 별 매출액(TOTAL_SALES = 판매량 * 판매가) 을 구하여
-- 저자 ID(AUTHOR_ID), 저자명(AUTHOR_NAME), 카테고리(CATEGORY), 매출액(SALES) 리스트
-- 저자 ID를 오름차순으로, 저자 ID가 같다면 카테고리를 내림차순 
SELECT A.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, SUM(S.SALES*B.PRICE) AS TOTAL_SALES
FROM AUTHOR AS A 
    JOIN BOOK AS B ON A.AUTHOR_ID=B.AUTHOR_ID
    JOIN BOOK_SALES AS S ON B.BOOK_ID=S.BOOK_ID
WHERE YEAR(S.SALES_DATE)=2022 AND MONTH(S.SALES_DATE)=1
GROUP BY A.AUTHOR_ID, B.CATEGORY
ORDER BY A.AUTHOR_ID, B.CATEGORY DESC

-- 131532
-- 년, 월, 성별 별로 상품을 구매한 회원수를 집계
-- 년, 월, 성별을 기준으로 오름차순 정렬
-- 성별 정보가 없는 경우 결과에서 제외
SELECT YEAR(O.SALES_DATE) AS YEAR, MONTH(O.SALES_DATE) AS MONTH, U.GENDER, COUNT(DISTINCT U.USER_ID) AS USERS
FROM ONLINE_SALE O
    JOIN USER_INFO U
    ON O.USER_ID=U.USER_ID
WHERE U.GENDER IS NOT NULL
GROUP BY YEAR, MONTH, GENDER
ORDER BY YEAR, MONTH, GENDER
-- 어이 없게도 여기서 갑자기 SUM(DISTINCT U.USER_ID)을 해버려서 틀렸었음

-- 59413
-- 몇 시에 입양이 가장 활발하게 일어나는지
-- 0시부터 23시까지, 각 시간대별로 입양이 몇 건이나 발생했는지 조회
-- 시간대 순으로 정렬
WITH RECURSIVE HOUR_TABLE AS (
    SELECT 0 AS HOUR, 0 AS COUNT
    UNION ALL
    SELECT HOUR+1, 0 FROM HOUR_TABLE
    WHERE HOUR < 23
)

SELECT NEW.HOUR, SUM(NEW.COUNT) AS COUNT
FROM (
    SELECT HOUR, COUNT
    FROM HOUR_TABLE A
    UNION ALL
    SELECT HOUR(DATETIME) AS HOUR, IFNULL(COUNT(ANIMAL_ID), 0) AS COUNT
    FROM ANIMAL_OUTS
    GROUP BY HOUR
    ORDER BY HOUR
) NEW
GROUP BY NEW.HOUR